{"ast":null,"code":"var _jsxFileName = \"/Users/wei.tao/Desktop/Cursor FIles/stock_prediction_app_react/src/components/StockChart.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst StockChart = ({\n  chartData,\n  companyName\n}) => {\n  _s();\n  const chartRef = useRef(null);\n  useEffect(() => {\n    // 图表已经加载后的操作\n    if (chartRef.current) {\n      // 可以在这里添加图表绘制后的逻辑\n    }\n  }, [chartData]);\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: `${companyName} 股票价格`\n      },\n      tooltip: {\n        callbacks: {\n          label: function (context) {\n            return `股价: $${context.parsed.y.toFixed(2)}`;\n          }\n        }\n      }\n    },\n    scales: {\n      y: {\n        title: {\n          display: true,\n          text: '价格 (USD)'\n        }\n      },\n      x: {\n        title: {\n          display: true,\n          text: '日期'\n        }\n      }\n    }\n  };\n  const data = {\n    labels: chartData.map(data => data.date),\n    datasets: [{\n      label: '收盘价',\n      data: chartData.map(data => data.close),\n      borderColor: 'rgb(53, 162, 235)',\n      backgroundColor: 'rgba(53, 162, 235, 0.5)'\n    }, {\n      label: '开盘价',\n      data: chartData.map(data => data.open),\n      borderColor: 'rgb(255, 99, 132)',\n      backgroundColor: 'rgba(255, 99, 132, 0.5)'\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"graph\",\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      ref: chartRef,\n      options: options,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(StockChart, \"X+1SfQQ6xefXNU27aQW843M7cTw=\");\n_c = StockChart;\nexport default StockChart;\nvar _c;\n$RefreshReg$(_c, \"StockChart\");","map":{"version":3,"names":["React","useEffect","useRef","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Line","jsxDEV","_jsxDEV","register","StockChart","chartData","companyName","_s","chartRef","current","options","responsive","plugins","legend","position","title","display","text","tooltip","callbacks","label","context","parsed","y","toFixed","scales","x","data","labels","map","date","datasets","close","borderColor","backgroundColor","open","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/wei.tao/Desktop/Cursor FIles/stock_prediction_app_react/src/components/StockChart.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { \n  Chart as ChartJS, \n  CategoryScale, \n  LinearScale, \n  PointElement, \n  LineElement, \n  Title, \n  Tooltip, \n  Legend, \n  ChartOptions \n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport { StockChartData } from '../types/stock';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\ninterface StockChartProps {\n  chartData: StockChartData[];\n  companyName: string;\n}\n\nconst StockChart: React.FC<StockChartProps> = ({ chartData, companyName }) => {\n  const chartRef = useRef<ChartJS<\"line\">>(null);\n\n  useEffect(() => {\n    // 图表已经加载后的操作\n    if (chartRef.current) {\n      // 可以在这里添加图表绘制后的逻辑\n    }\n  }, [chartData]);\n\n  const options: ChartOptions<'line'> = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top' as const,\n      },\n      title: {\n        display: true,\n        text: `${companyName} 股票价格`,\n      },\n      tooltip: {\n        callbacks: {\n          label: function(context) {\n            return `股价: $${context.parsed.y.toFixed(2)}`;\n          }\n        }\n      }\n    },\n    scales: {\n      y: {\n        title: {\n          display: true,\n          text: '价格 (USD)'\n        }\n      },\n      x: {\n        title: {\n          display: true,\n          text: '日期'\n        }\n      }\n    }\n  };\n\n  const data = {\n    labels: chartData.map(data => data.date),\n    datasets: [\n      {\n        label: '收盘价',\n        data: chartData.map(data => data.close),\n        borderColor: 'rgb(53, 162, 235)',\n        backgroundColor: 'rgba(53, 162, 235, 0.5)',\n      },\n      {\n        label: '开盘价',\n        data: chartData.map(data => data.open),\n        borderColor: 'rgb(255, 99, 132)',\n        backgroundColor: 'rgba(255, 99, 132, 0.5)',\n      }\n    ],\n  };\n\n  return (\n    <div className=\"graph\">\n      <Line ref={chartRef} options={options} data={data} />\n    </div>\n  );\n};\n\nexport default StockChart; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,SACEC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAM,QAED,UAAU;AACjB,SAASC,IAAI,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGvCV,OAAO,CAACW,QAAQ,CACdV,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MACF,CAAC;AAOD,MAAMK,UAAqC,GAAGA,CAAC;EAAEC,SAAS;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EAC5E,MAAMC,QAAQ,GAAGlB,MAAM,CAAkB,IAAI,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACd;IACA,IAAImB,QAAQ,CAACC,OAAO,EAAE;MACpB;IAAA;EAEJ,CAAC,EAAE,CAACJ,SAAS,CAAC,CAAC;EAEf,MAAMK,OAA6B,GAAG;IACpCC,UAAU,EAAE,IAAI;IAChBC,OAAO,EAAE;MACPC,MAAM,EAAE;QACNC,QAAQ,EAAE;MACZ,CAAC;MACDC,KAAK,EAAE;QACLC,OAAO,EAAE,IAAI;QACbC,IAAI,EAAE,GAAGX,WAAW;MACtB,CAAC;MACDY,OAAO,EAAE;QACPC,SAAS,EAAE;UACTC,KAAK,EAAE,SAAAA,CAASC,OAAO,EAAE;YACvB,OAAO,QAAQA,OAAO,CAACC,MAAM,CAACC,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC,EAAE;UAC9C;QACF;MACF;IACF,CAAC;IACDC,MAAM,EAAE;MACNF,CAAC,EAAE;QACDR,KAAK,EAAE;UACLC,OAAO,EAAE,IAAI;UACbC,IAAI,EAAE;QACR;MACF,CAAC;MACDS,CAAC,EAAE;QACDX,KAAK,EAAE;UACLC,OAAO,EAAE,IAAI;UACbC,IAAI,EAAE;QACR;MACF;IACF;EACF,CAAC;EAED,MAAMU,IAAI,GAAG;IACXC,MAAM,EAAEvB,SAAS,CAACwB,GAAG,CAACF,IAAI,IAAIA,IAAI,CAACG,IAAI,CAAC;IACxCC,QAAQ,EAAE,CACR;MACEX,KAAK,EAAE,KAAK;MACZO,IAAI,EAAEtB,SAAS,CAACwB,GAAG,CAACF,IAAI,IAAIA,IAAI,CAACK,KAAK,CAAC;MACvCC,WAAW,EAAE,mBAAmB;MAChCC,eAAe,EAAE;IACnB,CAAC,EACD;MACEd,KAAK,EAAE,KAAK;MACZO,IAAI,EAAEtB,SAAS,CAACwB,GAAG,CAACF,IAAI,IAAIA,IAAI,CAACQ,IAAI,CAAC;MACtCF,WAAW,EAAE,mBAAmB;MAChCC,eAAe,EAAE;IACnB,CAAC;EAEL,CAAC;EAED,oBACEhC,OAAA;IAAKkC,SAAS,EAAC,OAAO;IAAAC,QAAA,eACpBnC,OAAA,CAACF,IAAI;MAACsC,GAAG,EAAE9B,QAAS;MAACE,OAAO,EAAEA,OAAQ;MAACiB,IAAI,EAAEA;IAAK;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClD,CAAC;AAEV,CAAC;AAACnC,EAAA,CAnEIH,UAAqC;AAAAuC,EAAA,GAArCvC,UAAqC;AAqE3C,eAAeA,UAAU;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}